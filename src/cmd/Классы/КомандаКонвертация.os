Процедура ОписаниеКоманды(Команда) Экспорт

	Команда.Аргумент("REPO", ".", "Путь к git-репозиторию")
				.ТСтрока();

	Команда.Опция("dump", "src/ConfigDumpInfo.xml", 
				"Путь к файлу ConfigDump* внутри репозитория для получения соотвествия Id-Name. Файл должен содержать строки вида 'name=""Имя"" id=""Гуид""'")
				.ТСтрока();
				
	Команда.Опция("in orig", "src/Ext/ParentConfigurations.bin", 
				"Относительный путь к файлу ParentConfigurations.bin внутри репозитория")
				.ТСтрока();
				
	Команда.Опция("out mod", "", 
				"Относительный путь к сконвертированному файлу внутри репозитория. Если не задано - перезаписывается исходный файл. (не используется совместно с опцией `backup`)")
				.ТСтрока();
				
	Команда.Опция("bak backup", Ложь, "Сохранять оригинальный файл в ParentConfigurations.bin.bak (не используется совместно с опцией `out`)")
				.Флаг();
				
КонецПроцедуры

// Выполняет логику команды
Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	Лог = ПараметрыПриложения.Лог();

	КаталогРепозитория         = Команда.ЗначениеАргумента("REPO");
	ПутьКФайлуПоддержки       = Команда.ЗначениеОпции("in");
	ПутьКНовомуФайлуПоддержки = Команда.ЗначениеОпции("out");
	ПутьКФайлуДампа           = Команда.ЗначениеОпции("dump");
	СоздаватьБэкап            = Команда.ЗначениеОпции("backup");
	
	Если ЗначениеЗаполнено(ПутьКНовомуФайлуПоддержки)
		И СоздаватьБэкап = Истина Тогда
		Лог.Ошибка("Конвертация файла поддержки не выполнена. Опции `out` и `backup` не должны использоваться совместно.");
		Возврат;
	КонецЕсли;

	Файл = Новый Файл(КаталогРепозитория);
	КаталогРепозитория = Файл.ПолноеИмя;
	
	УстановитьТекущийКаталог(КаталогРепозитория);
	
	Файл = Новый Файл(ПутьКФайлуПоддержки);
	Если Файл.Размер() < 20 Тогда
		Лог.Информация("Конвертация файла поддержки не выполнена. Вероятно конфигурация снята с поддержки.");
		Возврат;
	КонецЕсли;

	ИмяВременногоФайлаИсходный = ПолучитьИмяВременногоФайла();
	КопироватьФайл(ПутьКФайлуПоддержки, ИмяВременногоФайлаИсходный);

	ИмяВременногоФайлаЦелевой = ПолучитьИмяВременногоФайла();

	Конвертор = Новый Конвертор(КаталогРепозитория);
	Конвертор.ОпределитьИменаМетаданных(ПутьКФайлуДампа);
	Ошибка = Конвертор.ВыполнитьКонвертацию(ИмяВременногоФайлаИсходный, ИмяВременногоФайлаЦелевой);
	
	Если НЕ ПустаяСтрока(Ошибка) Тогда
		УдалитьФайлы(ИмяВременногоФайлаИсходный);
		УдалитьФайлы(ИмяВременногоФайлаЦелевой);
		Лог.Предупреждение(Ошибка);
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ПутьКНовомуФайлуПоддержки) Тогда
		УдалитьФайлы(ПутьКНовомуФайлуПоддержки);
		ПереместитьФайл(ИмяВременногоФайлаЦелевой, ПутьКНовомуФайлуПоддержки);
		Лог.Информация("Выполнена конвертация файла поддержки %1 в файл %2", ПутьКФайлуПоддержки, ПутьКНовомуФайлуПоддержки);
	Иначе
		УдалитьФайлы(ПутьКФайлуПоддержки);
		ПереместитьФайл(ИмяВременногоФайлаЦелевой, ПутьКФайлуПоддержки);
		Лог.Информация("Выполнена конвертация файла поддержки %1", ПутьКФайлуПоддержки);
	КонецЕсли;
	
	Если СоздаватьБэкап Тогда
		ФайлПоддержки = Новый Файл(ПутьКФайлуПоддержки);
		ИмяФайлаПоддержки = ФайлПоддержки.Имя;
		ИмяФайлаБэкапа = ИмяФайлаПоддержки + ".bak";
		ПутьКФайлуБэкапа = ОбъединитьПути(ФайлПоддержки.Путь, ИмяФайлаБэкапа);
		УдалитьФайлы(ПутьКФайлуБэкапа);
		ПереместитьФайл(ИмяВременногоФайлаИсходный, ПутьКФайлуБэкапа);
		Лог.Информация("Исходный файл %1 переименован в %2", ИмяФайлаПоддержки, ИмяФайлаБэкапа);
	Иначе
		УдалитьФайлы(ИмяВременногоФайлаИсходный);
	КонецЕсли;

КонецПроцедуры

