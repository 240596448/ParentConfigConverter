
Процедура ОписаниеКоманды(Команда) Экспорт

	Команда.Аргумент("REPO", ".", "Путь к git-репозиторию")
				.ТСтрока();

	Команда.Опция("in dump", "src/ConfigDumpInfo.xml", 
				"Путь к файлу ConfigDump* внутри репозитория для получения соотвествия Id-Name. Файл должен содержать строки вида 'name=""Имя"" id=""Гуид""'")
				.ТСтрока();
				
	Команда.Опция("out file", "mod/ConfigID.xml", 
				"Сохранять пары Name-Id, полученные из дампа, в отдельный файл")
				.ТСтрока();
				
КонецПроцедуры

// Выполняет логику команды
Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	Лог = ПараметрыПриложения.Лог();

	КаталогРепозитория            = Команда.ЗначениеАргумента("REPO");
	ПутьКФайлуДампа               = Команда.ЗначениеОпции("dump");
	ПутьКФайлуКэшаИдентификаторов = Команда.ЗначениеОпции("file");
	
	Файл = Новый Файл(КаталогРепозитория);
	КаталогРепозитория = Файл.ПолноеИмя;
	
	УстановитьТекущийКаталог(КаталогРепозитория);
	
	ОбщегоНазначения.ПодготовитьФайлКЗаписи(ПутьКФайлуКэшаИдентификаторов);

	Метаданные = Новый Метаданные();
	Метаданные.ОпределитьИменаМетаданных(ПутьКФайлуДампа);
	Если ЗначениеЗаполнено(ПутьКФайлуКэшаИдентификаторов) Тогда
		Метаданные.СоздатьКэш(ПутьКФайлуКэшаИдентификаторов, Истина);
	КонецЕсли;

	Лог.Информация("Сохранен кэш дамп-файла %1 в файл %2", ПутьКФайлуДампа, ПутьКФайлуКэшаИдентификаторов);
	
КонецПроцедуры
