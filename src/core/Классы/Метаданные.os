Перем СоответствиеИменID;
Перем Таблица;

Процедура ПриСозданииОбъекта() Экспорт
	
	СоответствиеИменID = Новый Соответствие();
	
	Таблица = Новый ТаблицаЗначений();
	Таблица.Колонки.Добавить("name");
	Таблица.Колонки.Добавить("id");

КонецПроцедуры

Функция СоответствиеИменID() Экспорт
	Возврат СоответствиеИменID;
КонецФункции

Функция ОпределитьИменаМетаданных(ПутьКФайлуДампа) Экспорт
	
	ТекстСодержимогоФайла = ОбщегоНазначения.ПрочитатьФайлВТекст(ПутьКФайлуДампа);

	// заполнение соответствия ID -> Name 
	РВ = Новый РегулярноеВыражение("name=""(?<name>.+?)"" id=""(?<id>.+?)""");
	Совпадения = РВ.НайтиСовпадения(ТекстСодержимогоФайла);
	Для каждого Совпадение Из Совпадения Цикл
		
		ГУИД = Совпадение.Группы.ПоИмени("id").Значение;
		Если СтрНайти(ГУИД, ".") Тогда
			Продолжить;
		КонецЕсли;
		Имя = Совпадение.Группы.ПоИмени("name").Значение;
		СоответствиеИменID.Вставить(ГУИД, Имя);

		СтрТЗ = Таблица.Добавить();
		СтрТЗ.name = Имя;
		СтрТЗ.id = ГУИД;

	КонецЦикла;

	Возврат СоответствиеИменID;

КонецФункции 

Функция СоздатьКэш(ПутьКФайлу) Экспорт
	
	ЗаписьТекста = Новый ЗаписьТекста(ПутьКФайлу, КодировкаТекста.UTF8);
	ЗаписьТекста.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""UTF-8""?>");

	Шаблон = "<name=""%1"" id=""%2""/>";
	Для каждого Стр Из Таблица Цикл
		ЗаписьТекста.ЗаписатьСтроку(СтрШаблон(Шаблон, Стр.name, Стр.id));
	КонецЦикла;

	ЗаписьТекста.Закрыть();

КонецФункции 

